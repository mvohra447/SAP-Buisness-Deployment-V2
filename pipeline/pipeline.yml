# YAML anchors
shared:

  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
    - name: merged-stack
      path: "merged-stack"

  # Task : connect on the bastion server and run ansible from it
  - &run-ansible-from-bastion
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cycloid/cycloid-toolkit
          tag: v((ansible_version))
      run:
        path: /usr/bin/ansible-runner
      caches:
        - path: ansible-playbook/roles
      inputs:
      - name: merged-stack
        path: ansible-playbook

groups:
- name: overview
  jobs:
  - terraform-plan
  - terraform-apply
  - mount-all-disk
  - SAP-BuisnessOne-Deployment
- name: destroy
  jobs:
  - terraform-destroy

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: '0.12.28'

resources:
- name: tfstate
  type: terraform
  source:
    env_name: ((env))
    backend_type: s3
    backend_config:
      bucket: ((terraform_storage_bucket_name))
      key: ((project))-((env)).tfstate
      workspace_key_prefix: ((project))
      region: ((aws_default_region))
      access_key: ((aws_access_key))
      secret_key: ((aws_secret_key))
    vars:
      env: ((env))
      project: ((project))
      customer: ((customer))
      AZURE_CLIENT_ID: ((((azure_base_id)).client_id))
      AZURE_CLIENT_SECRET: ((((azure_base_id)).client_secret))
      AZURE_SUBSCRIPTION_ID: ((((azure_base_id)).subscription_id))
      AZURE_TENENT_ID: ((((azure_base_id)).tenant_id))


- name: git_stack-ansible
  type: git
  source:
    uri: git@github.com:abhaysrivastava-orange/SAP-Buisness-Deployment-V2.git
    branch: ((stack_git_branch))
    private_key: ((stack_git_private_key))
    paths:
      - ansible/*

- name: git_config-ansible
  type: git
  source:
    uri: ((config_git_repository)) 
    branch: ((config_git_branch))
    private_key: ((config_git_private_key))
    paths:
      - ((config_ansible_path))/*


# The Terraform stack (will be merged with the config)
- name: git_stack-terraform
  type: git
  source:
    uri: git@github.com:abhaysrivastava-orange/SAP-Buisness-Deployment-V2.git
    branch: ((stack_git_branch))
    private_key: ((stack_git_private_key))
    paths:
      - terraform/*

# The Terraform config (will be merged with the stack)
- name: git_config-terraform
  type: git
  source:
    uri: ((config_git_repository))
    branch: ((config_git_branch))
    private_key: ((config_git_private_key))
    paths:
      - ((config_terraform_path))/*

jobs:
  - name: terraform-plan
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
        - get: git_stack-terraform
          trigger: false
        - get: git_config-terraform
          trigger: false

        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: git_config-terraform
              path: "config"
            - name: git_stack-terraform
              path: "stack"
          params:
            CONFIG_PATH: ((config_terraform_path))
            STACK_PATH: terraform

        - put: tfstate
          params:
            plan_only: true
            terraform_source: merged-stack/

  - name: terraform-apply
    build_logs_to_retain: 10
    plan:
      - do:
        # Get the PR on the project #
        - get: git_stack-terraform
          trigger: false
        - get: git_config-terraform
          trigger: true
          passed:
            - terraform-plan
        - get: tfstate
          trigger: true
          passed:
            - terraform-plan

        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: git_config-terraform
              path: "config"
            - name: git_stack-terraform
              path: "stack"
          params:
            CONFIG_PATH: ((config_terraform_path))
            STACK_PATH: terraform

        - put: tfstate
          params:
            plan_run: true
            terraform_source: merged-stack/

  - name: terraform-destroy
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_stack-terraform
            trigger: false
          - get: git_config-terraform
            trigger: false
          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
              - name: git_config-terraform
                path: "config"
              - name: git_stack-terraform
                path: "stack"
            params:
              CONFIG_PATH: ((config_terraform_path))
              STACK_PATH: terraform

          - put: tfstate
            params:
              action: destroy
              terraform_source: merged-stack/
            get_params:
              action: destroy

  - name: mount-all-disk
    build_logs_to_retain: 10
    plan:
    - do:
      - get: tfstate
        trigger: true
        passed:
          - terraform-apply

      - get: git_stack-ansible
        trigger: false
        
      - get: git_config-ansible
        trigger: false

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_stack-ansible
            path: "stack"
          - name: git_config-ansible
            path: "config"
          - name: tfstate
            path: "terraform"
        params:
          STACK_PATH: ansible
          CONFIG_PATH: ((config_ansible_path))

      - task: run-ansible
        <<: *run-ansible-from-bastion
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cycloid/cycloid-toolkit
              tag: py3-a2.8
          container_limits: {}
          run:
            path: /bin/sh
            args:
              - '-exc'
              - |
                find .
                echo "plain_host_names: 'true'" >> /etc/ansible/hosts-template/default.azure_rm.yml.template
                /usr/bin/ansible-runner
          inputs:
            - name: merged-stack
              path: ansible-playbook
          caches:
            - path: ansible-playbook/roles
        params:
          ANSIBLE_FORCE_GALAXY: false
          BASTION_URL: ((bastion_url))
          BASTION_PRIVATE_KEY: ((azure_bastion_key))
          ANSIBLE_PLAYBOOK_PATH: ansible-playbook
          ANSIBLE_PLUGIN_AZURE_PLAIN_HOST_NAMES: true
          ANSIBLE_PLAYBOOK_NAME: mountfs.yml
          ANSIBLE_REMOTE_USER: ((ansible_remote_user)) 
          ANSIBLE_VAULT_PASSWORD: ((ansible_vault_password))
          AZURE_CLIENT_ID: ((((azure_base_id)).client_id))
          AZURE_DEFAULT_REGION: East US
          AZURE_SECRET: ((((azure_base_id)).client_secret))
          AZURE_SUBSCRIPTION_ID: ((((azure_base_id)).subscription_id))
          AZURE_TENANT: ((((azure_base_id)).tenant_id))
          AZURE_USE_PRIVATE_IP: 'False'
          EXTRA_VARS:
            customer: ((customer))
            project: ((project))
            env: ((env))
            default_ec2_region: ((azure_default_region))
          SAP_DEPLOY_BUCKET_NAME: ((sap_deploy_bucket_name))
          SAP_DEPLOY_BUCKET_OBJECT_PATH: ((sap_deploy_bucket_object_path))
          SAP_DEPLOY_BUCKET_REGION: ((aws_default_region))


  - name: SAP-BuisnessOne-Deployment
    build_logs_to_retain: 10
    plan:
    - do:
      - get: tfstate
        trigger: true
        passed:
          - mount-all-disk

      - get: git_stack-ansible
        trigger: false

      - get: git_config-ansible
        trigger: false

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_stack-ansible
            path: "stack"
          - name: git_config-ansible
            path: "config"
          - name: tfstate
            path: "terraform"
        params:
          STACK_PATH: ansible
          CONFIG_PATH: ((config_ansible_path))

      - task: run-ansible
        <<: *run-ansible-from-bastion
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cycloid/cycloid-toolkit
              tag: py3-a2.8
          container_limits: {}
          run:
            path: /bin/sh
            args:
              - '-exc'
              - |
                find .
                echo "plain_host_names: 'true'" >> /etc/ansible/hosts-template/default.azure_rm.yml.template
                /usr/bin/ansible-runner
          inputs:
            - name: merged-stack
              path: ansible-playbook
          caches:
            - path: ansible-playbook/roles
        params:
          ANSIBLE_FORCE_GALAXY: false
          BASTION_URL: ((bastion_url))
          BASTION_PRIVATE_KEY: ((azure_bastion_key))
          ANSIBLE_PLAYBOOK_PATH: ansible-playbook
          ANSIBLE_PLUGIN_AZURE_PLAIN_HOST_NAMES: true
          ANSIBLE_PLAYBOOK_NAME: sapbuisness-inst/h1b_main.yml
          ANSIBLE_VAULT_PASSWORD: ((ansible_vault_password))
          ANSIBLE_REMOTE_USER: ((ansible_remote_user)) 
          AZURE_CLIENT_ID: ((((azure_base_id)).client_id))
          AZURE_DEFAULT_REGION: East US
          AZURE_SECRET: ((((azure_base_id)).client_secret))
          AZURE_SUBSCRIPTION_ID: ((((azure_base_id)).subscription_id))
          AZURE_TENANT: ((((azure_base_id)).tenant_id))
          AZURE_USE_PRIVATE_IP: 'False'
          EXTRA_VARS:
            customer: ((customer))
            project: ((project))
            env: ((env))
            default_ec2_region: ((azure_default_region))
          SAP_DEPLOY_BUCKET_NAME: ((sap_deploy_bucket_name))
          SAP_DEPLOY_BUCKET_OBJECT_PATH: ((sap_deploy_bucket_object_path))
          SAP_DEPLOY_BUCKET_REGION: ((aws_default_region))
